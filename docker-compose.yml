services:
  database:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./data:/var/lib/postgresql/data
    restart: always

  app:
    build:
      context: ./hiddify
    image: hiddify
    container_name: hiddify-app
    entrypoint: ["/usr/src/app/entrypoint.sh"]
    volumes:
      - static:/usr/src/app/static
      - media:/usr/src/app/media
      - ./hiddify/entrypoint.sh:/usr/src/app/entrypoint.sh
    depends_on:
      - database
      - redis

    env_file:
      - ./hiddify/.env

  celery_worker:
    # Reuse the app build or image
    image: hiddify  # Use the same image as app service
    container_name: hiddify-celery-worker
    command: celery -A hiddify worker -l INFO
    depends_on:
      - redis
      - database
      - app
    env_file:
      - ./hiddify/.env

  celery_beat:
    # Reuse the app build or image
    image: hiddify  # Use the same image as app service
    container_name: hiddify-celery-beat
    command: celery -A hiddify beat -l INFO
    depends_on:
      - redis
      - database
      - app
    env_file:
      - ./hiddify/.env

  telegram_bot:
    build:
      context: ./telegram_bot
    image: telegram_bot
    container_name: telegram-bot
    env_file:
      - ./telegram_bot/.env
    restart: always

  redis:
    container_name: redis
    image: redis
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$REDIS_PASSWORD"
    ports:
      - "6379:6379"
    env_file:
      - ./hiddify/.env
    volumes:
      - redis:/data

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:

# Comment the folowing lines if you want to setuop site for the first time
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - static:/var/www/static
      - media:/var/www/media

# Uncomment the following lines if you want to use a temporary nginx configuration
# It should be uncommented for the first run to set up the initial configuration
# first file http

#      - ./nginx/nginx-temp.conf:/etc/nginx/nginx.conf:ro
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot

    depends_on:
      - app

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    
    # change the command to your needs replace email and domain with your own
    command: certonly --webroot -w /var/www/certbot --force-renewal --email YOUREMAIL@EMAIL.COM -d YOUTDOMAIN.COM --agree-tos


volumes:
  static:
  media:
  redis:
